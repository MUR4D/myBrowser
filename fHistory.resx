<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABDxJREFUaEPt
        mWuoF0UYh09WSuW9UhMMjSJEu2CYBn6IzLsiKGWiQvcPRYEVYkIfKkOxDNJQEk28oh/qU0VFF+gQQVFq
        ISYlGEVSImo3zUx7HjiDc9bd+e9/zxES9gfPh92ZeXfe2ZnZd95tqVWrVq1a/2ddAF3hMugFl0M/GABX
        tXEFXALWzZP3bX8lhDa21472tHspXAxFNprWhdAfRsAUeAhegM3wEeyGA/AHnIQTsBdWw2ToBrHs5EzY
        APvhH7Cd7X+Gb+ADsPxZuB8mwk3gAHWB0nLEb4FHYR18CHb4IPjQ0yU4BXbsdRgCaihsB+3ktclDR3+B
        r+F9cIAehOHgG8vVzfAyfA9/gqNrh/IeUJZ/4XN4DHwDnWHvb/gdfHvPwXXQTnGD4+BIfAdfwVuwHB6B
        qeAbuxp6wkXgK3eu3wNvw69Q1Gk749t6A6aDU8Yp3B2ugTtAx51eX8APcAzybIkD3k5x4ZMwDW4A53Uz
        cqHeDa0Q2xQf6qBMgkbz3YXeB8aAjm2BvLeadKRw/pWUnRwMWyG2uwJ8c83uRtbvDa6N+eCGEmyeU0eC
        tBPb7SzdCMFmU444im6DTplZOXjfcuvFauSIb81tvcjuXTAO/L7EquTIQHgHDkPRAva+5dazflDKEZ34
        GH6D1Mbgdr0N/IAGVXJkKRQ9KIv1lkBQypGNUNauW64LPqiSI5tgVxPYwaCUI62Q176I5yGo8hqpqpQj
        HVHtiPu4X3DvF2F59vvg/dhuVn5vqtit5EgPeAYMFdxF4noB71tuPesHaSeuF8uIwbDH6Llo0Rs0GiY9
        DkYMQZUceRjKRr3Ws35QypFFUDQwWQxiZ0BQJUfc6+OyRnhOCUo58hPEZSl8Y69BUL3Yq6p2pIEqOzIB
        doAHHBtm8b7l1ovVyJG58C14kMuz6yL/DG6FWJUcGQ9WjsuLsJ7RalDKEZMQbq9xeRFHYDQEVXLkTYjL
        GmH9oJQjOyEuS+G2/hIEVXLkWrBhWawflHJkGOS1L2IQBHkdbJZ2pCNKOdIR1Y7EMtAz6TYW7oOnwfm7
        Bjy7mHAwyXA7ZB3x2iPxKvDUZ13bmAh8FZaB8Zqx1RxwozGTYzYlVmVHzF/NBh/6I5gg+ws8uYW0p2FE
        CP6MoTzC3tZ2HdB5d6A4xgrtvKcd7dk5t2SfYTr1KOwBc12mUU3HhvZJR/qCqRcDwPfADsflZfk0c/1J
        5rozSDqyHvZB2ei0iOwAOMrxdWeQdOR84ixH4nlqoaNp6OE8NVRwXTjvna+G4F/Cu2Cy4UVYAPeC8zfk
        hj1kHQJtu7b8L+JGYchhSvYBWAgmz02JmnH3Q+lhy+f4PNeIz7cfvlH7Zf/sp/31up1cSK+AGe4nwIcY
        RtwJI8Gstz9jsv88UvKIOg/WQjYOayR/FvkD6HoYBe5gJuz8rfAULIaV4DKoVatWrVq1ap1RS8t/axUS
        jxNjFQ8AAAAASUVORK5CYII=
</value>
  </data>
</root>